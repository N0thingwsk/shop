# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    /v1/inventory/getinventory:
        post:
            tags:
                - Inventory
            operationId: Inventory_InvDetail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.inventory.v1.GoodsInvInfo'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.inventory.v1.GoodsInvInfo'
    /v1/user/create:
        post:
            tags:
                - User
            operationId: User_RegisterUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserInfoReply'
    /v1/user/delete:
        post:
            tags:
                - User
            operationId: User_DeleteUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.DeleteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserInfoReply'
    /v1/user/getuser:
        post:
            tags:
                - User
            operationId: User_GetUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.GetUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserInfoReply'
    /v1/user/login:
        post:
            tags:
                - User
            operationId: User_LoginUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.LoginReply'
    /v1/user/sendcode:
        post:
            tags:
                - User
            operationId: User_SendVerificationCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.SendCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.SendCodeReply'
    /v1/user/update/nickname:
        post:
            tags:
                - User
            operationId: User_UpdateUserGender
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.UpdateGenderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserInfoReply'
components:
    schemas:
        api.inventory.v1.GoodsInvInfo:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                stocks:
                    type: integer
                    format: int32
        api.user.v1.DeleteRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.DeleteRequest_User'
        api.user.v1.DeleteRequest_User:
            type: object
            properties:
                token:
                    type: string
        api.user.v1.GetUserRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.GetUserRequest_User'
        api.user.v1.GetUserRequest_User:
            type: object
            properties:
                token:
                    type: string
        api.user.v1.LoginReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.LoginReply_User'
                token:
                    type: string
        api.user.v1.LoginReply_User:
            type: object
            properties:
                mobile:
                    type: string
                nikeName:
                    type: string
        api.user.v1.LoginRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.LoginRequest_User'
        api.user.v1.LoginRequest_User:
            type: object
            properties:
                mobile:
                    type: string
                password:
                    type: string
                code:
                    type: string
        api.user.v1.RegisterRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.RegisterRequest_User'
        api.user.v1.RegisterRequest_User:
            type: object
            properties:
                mobile:
                    type: string
                password:
                    type: string
                code:
                    type: string
        api.user.v1.SendCodeReply:
            type: object
            properties:
                code:
                    type: string
        api.user.v1.SendCodeRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.SendCodeRequest_User'
        api.user.v1.SendCodeRequest_User:
            type: object
            properties:
                mobile:
                    type: string
        api.user.v1.UpdateBirthdayRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.UpdateBirthdayRequest_User'
        api.user.v1.UpdateBirthdayRequest_User:
            type: object
            properties:
                token:
                    type: string
                nikeName:
                    type: string
                birthday:
                    type: string
                gender:
                    type: string
        api.user.v1.UpdateGenderRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.UpdateGenderRequest_User'
        api.user.v1.UpdateGenderRequest_User:
            type: object
            properties:
                token:
                    type: string
                nikeName:
                    type: string
                birthday:
                    type: string
                gender:
                    type: string
        api.user.v1.UpdateNickNameRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.UpdateNickNameRequest_User'
        api.user.v1.UpdateNickNameRequest_User:
            type: object
            properties:
                token:
                    type: string
                nikeName:
                    type: string
                birthday:
                    type: string
                gender:
                    type: string
        api.user.v1.UpdatePasswordRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.UpdatePasswordRequest_User'
        api.user.v1.UpdatePasswordRequest_User:
            type: object
            properties:
                token:
                    type: string
                nikeName:
                    type: string
                birthday:
                    type: string
                gender:
                    type: string
        api.user.v1.UserInfoReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.UserInfoReply_User'
        api.user.v1.UserInfoReply_User:
            type: object
            properties:
                mobile:
                    type: string
                nikeName:
                    type: string
                birthday:
                    type: string
                gender:
                    type: string
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
tags:
    - name: Greeter
      description: The greeting service definition.
    - name: Inventory
    - name: User
