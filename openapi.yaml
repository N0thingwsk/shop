# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/goods/add:
        post:
            tags:
                - Goods
            description: 创建商品
            operationId: Goods_CreateGoods
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.goods.v1.CreateGoodsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.CreateGoodsReply'
    /v1/goods/brand/add:
        post:
            tags:
                - Goods
            description: 创建品牌
            operationId: Goods_CreateBrand
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.goods.v1.CreateBrandRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.CreateBrandReply'
    /v1/goods/brand/delete:
        post:
            tags:
                - Goods
            description: 删除品牌
            operationId: Goods_DeleteBrand
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.goods.v1.DeleteBrandRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.DeleteBrandReply'
    /v1/goods/brand/get/list:
        post:
            tags:
                - Goods
            description: 获取品牌列表
            operationId: Goods_GetBrandList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.goods.v1.GetBrandListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.GetBrandListReply'
    /v1/goods/brand/get/{Id}:
        get:
            tags:
                - Goods
            description: 获取品牌
            operationId: Goods_GetBrand
            parameters:
                - name: Id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.GetBrandReply'
    /v1/goods/brand/update:
        post:
            tags:
                - Goods
            description: 更新品牌
            operationId: Goods_UpdateBrand
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.goods.v1.UpdateBrandRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.UpdateBrandReply'
    /v1/goods/category/add:
        post:
            tags:
                - Goods
            description: 创建商品种类
            operationId: Goods_CreateCategory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.goods.v1.CreateCategoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.CreateCategoryReply'
    /v1/goods/category/delete:
        post:
            tags:
                - Goods
            description: 删除商品种类
            operationId: Goods_DeleteCategory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.goods.v1.DeleteCategoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.DeleteCategoryReply'
    /v1/goods/category/get/list:
        post:
            tags:
                - Goods
            description: 获取商品分类列表
            operationId: Goods_GetCategoryList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.goods.v1.GetCategoryListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.GetCategoryListReply'
    /v1/goods/category/get/{Id}:
        get:
            tags:
                - Goods
            description: 获取商品分类
            operationId: Goods_GetCategory
            parameters:
                - name: Id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.GetCategoryReply'
    /v1/goods/category/update:
        post:
            tags:
                - Goods
            description: 更新商品分类类
            operationId: Goods_UpdateCategory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.goods.v1.UpdateCategoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.UpdateCategoryReply'
    /v1/goods/delete:
        post:
            tags:
                - Goods
            description: 删除商品
            operationId: Goods_DeleteGoods
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.goods.v1.DeleteGoodsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.DeleteGoodsReply'
    /v1/goods/get/list:
        post:
            tags:
                - Goods
            description: 获取商品列表
            operationId: Goods_GetGoodsList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.goods.v1.GetGoodsListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.GetGoodsListReply'
    /v1/goods/get/{Id}:
        get:
            tags:
                - Goods
            description: 获取商品
            operationId: Goods_GetGoods
            parameters:
                - name: Id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.GoodsReply'
    /v1/goods/update:
        post:
            tags:
                - Goods
            description: 更新商品
            operationId: Goods_UpdateGoods
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.goods.v1.UpdateGoodsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.goods.v1.UpdateGoodsReply'
    /v1/user/delete:
        post:
            tags:
                - User
            operationId: User_DeleteUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.DeleteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserInfoReply'
    /v1/user/getuser:
        post:
            tags:
                - User
            operationId: User_GetUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.GetUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserInfoReply'
    /v1/user/login:
        post:
            tags:
                - User
            operationId: User_LoginUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.LoginReply'
    /v1/user/register:
        post:
            tags:
                - User
            operationId: User_RegisterUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserInfoReply'
    /v1/user/sendcode:
        post:
            tags:
                - User
            operationId: User_SendVerificationCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.SendCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.SendCodeReply'
    /v1/user/update/birthday:
        post:
            tags:
                - User
            operationId: User_UpdateUserBirthday
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.UpdateBirthdayRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserInfoReply'
    /v1/user/update/gender:
        post:
            tags:
                - User
            operationId: User_UpdateUserGender
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.UpdateGenderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserInfoReply'
    /v1/user/update/nickname:
        post:
            tags:
                - User
            operationId: User_UpdateUserNickName
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.UpdateNickNameRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserInfoReply'
    /v1/user/update/password:
        post:
            tags:
                - User
            operationId: User_UpdateUserPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.UpdatePasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserInfoReply'
components:
    schemas:
        api.goods.v1.Brands:
            type: object
            properties:
                Name:
                    type: string
                Loge:
                    type: string
        api.goods.v1.Category:
            type: object
            properties:
                Name:
                    type: string
                ParentCategoryID:
                    type: integer
                    format: int64
                ParentCategory:
                    $ref: '#/components/schemas/api.goods.v1.Category'
                Level:
                    type: integer
                    format: int64
                IsTab:
                    type: boolean
                Id:
                    type: integer
                    format: int64
        api.goods.v1.CreateBrandReply:
            type: object
            properties:
                Code:
                    type: integer
                    format: int64
                Message:
                    type: string
        api.goods.v1.CreateBrandRequest:
            type: object
            properties:
                Brands:
                    $ref: '#/components/schemas/api.goods.v1.Brands'
        api.goods.v1.CreateCategoryReply:
            type: object
            properties:
                Code:
                    type: integer
                    format: int64
                Message:
                    type: string
        api.goods.v1.CreateCategoryRequest:
            type: object
            properties:
                Category:
                    $ref: '#/components/schemas/api.goods.v1.Category'
        api.goods.v1.CreateGoodsReply:
            type: object
            properties:
                Code:
                    type: integer
                    format: int64
                Message:
                    type: string
        api.goods.v1.CreateGoodsRequest:
            type: object
            properties:
                Goods:
                    $ref: '#/components/schemas/api.goods.v1.GoodsValue'
        api.goods.v1.DeleteBrandReply:
            type: object
            properties:
                Code:
                    type: integer
                    format: int64
                Message:
                    type: string
        api.goods.v1.DeleteBrandRequest:
            type: object
            properties:
                Id:
                    type: integer
                    format: int64
        api.goods.v1.DeleteCategoryReply:
            type: object
            properties:
                Code:
                    type: integer
                    format: int64
                Message:
                    type: string
        api.goods.v1.DeleteCategoryRequest:
            type: object
            properties:
                Id:
                    type: integer
                    format: int64
        api.goods.v1.DeleteGoodsReply:
            type: object
            properties:
                Code:
                    type: integer
                    format: int64
                Message:
                    type: string
        api.goods.v1.DeleteGoodsRequest:
            type: object
            properties:
                Id:
                    type: integer
                    format: int64
        api.goods.v1.GetBrandListReply:
            type: object
            properties: {}
        api.goods.v1.GetBrandListRequest:
            type: object
            properties: {}
        api.goods.v1.GetBrandReply:
            type: object
            properties:
                Code:
                    type: integer
                    format: int64
                Message:
                    type: string
                Brands:
                    $ref: '#/components/schemas/api.goods.v1.Brands'
        api.goods.v1.GetCategoryListReply:
            type: object
            properties: {}
        api.goods.v1.GetCategoryListRequest:
            type: object
            properties: {}
        api.goods.v1.GetCategoryReply:
            type: object
            properties:
                Code:
                    type: integer
                    format: int64
                Message:
                    type: string
                Category:
                    $ref: '#/components/schemas/api.goods.v1.Category'
        api.goods.v1.GetGoodsListReply:
            type: object
            properties:
                Code:
                    type: integer
                    format: int64
                Message:
                    type: string
                Goods:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.goods.v1.GoodsValue'
        api.goods.v1.GetGoodsListRequest:
            type: object
            properties:
                Id:
                    type: array
                    items:
                        type: integer
                        format: int64
        api.goods.v1.GoodsReply:
            type: object
            properties:
                Code:
                    type: integer
                    format: int64
                Message:
                    type: string
                Goods:
                    $ref: '#/components/schemas/api.goods.v1.GoodsValue'
        api.goods.v1.GoodsValue:
            type: object
            properties:
                OnSale:
                    type: boolean
                ShipFree:
                    type: boolean
                IsNew:
                    type: boolean
                IsHot:
                    type: boolean
                Name:
                    type: string
                GoodsSn:
                    type: string
                ChickNum:
                    type: integer
                    format: int64
                SoldNum:
                    type: integer
                    format: int64
                FavNum:
                    type: integer
                    format: int64
                MarketPrice:
                    type: number
                    format: float
                ShopPrice:
                    type: number
                    format: float
                GoodsBrief:
                    type: string
                Images:
                    type: string
                GoodsDetail:
                    type: string
                GoodsFrontImage:
                    type: string
                CategoryID:
                    type: integer
                    format: int64
                Category:
                    $ref: '#/components/schemas/api.goods.v1.Category'
                BrandsID:
                    type: integer
                    format: int64
                Brands:
                    $ref: '#/components/schemas/api.goods.v1.Brands'
                Id:
                    type: integer
                    format: int64
        api.goods.v1.UpdateBrandReply:
            type: object
            properties:
                Code:
                    type: integer
                    format: int64
                Message:
                    type: string
        api.goods.v1.UpdateBrandRequest:
            type: object
            properties:
                Brands:
                    $ref: '#/components/schemas/api.goods.v1.Brands'
        api.goods.v1.UpdateCategoryReply:
            type: object
            properties:
                Code:
                    type: integer
                    format: int64
                Message:
                    type: string
        api.goods.v1.UpdateCategoryRequest:
            type: object
            properties:
                Category:
                    $ref: '#/components/schemas/api.goods.v1.Category'
        api.goods.v1.UpdateGoodsReply:
            type: object
            properties:
                Code:
                    type: integer
                    format: int64
                Message:
                    type: string
        api.goods.v1.UpdateGoodsRequest:
            type: object
            properties:
                Goods:
                    $ref: '#/components/schemas/api.goods.v1.GoodsValue'
        api.user.v1.DeleteRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.DeleteRequest_User'
        api.user.v1.DeleteRequest_User:
            type: object
            properties:
                token:
                    type: string
        api.user.v1.GetUserRequest:
            type: object
            properties: {}
        api.user.v1.LoginReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.LoginReply_User'
                token:
                    type: string
        api.user.v1.LoginReply_User:
            type: object
            properties:
                mobile:
                    type: string
                nikeName:
                    type: string
        api.user.v1.LoginRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.LoginRequest_User'
        api.user.v1.LoginRequest_User:
            type: object
            properties:
                mobile:
                    type: string
                password:
                    type: string
                code:
                    type: string
        api.user.v1.RegisterRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.RegisterRequest_User'
        api.user.v1.RegisterRequest_User:
            type: object
            properties:
                mobile:
                    type: string
                password:
                    type: string
                code:
                    type: string
        api.user.v1.SendCodeReply:
            type: object
            properties:
                code:
                    type: string
        api.user.v1.SendCodeRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.SendCodeRequest_User'
        api.user.v1.SendCodeRequest_User:
            type: object
            properties:
                mobile:
                    type: string
        api.user.v1.UpdateBirthdayRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.UpdateBirthdayRequest_User'
        api.user.v1.UpdateBirthdayRequest_User:
            type: object
            properties:
                birthday:
                    type: string
        api.user.v1.UpdateGenderRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.UpdateGenderRequest_User'
        api.user.v1.UpdateGenderRequest_User:
            type: object
            properties:
                gender:
                    type: string
        api.user.v1.UpdateNickNameRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.UpdateNickNameRequest_User'
        api.user.v1.UpdateNickNameRequest_User:
            type: object
            properties:
                nikename:
                    type: string
        api.user.v1.UpdatePasswordRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.UpdatePasswordRequest_User'
        api.user.v1.UpdatePasswordRequest_User:
            type: object
            properties:
                password:
                    type: string
        api.user.v1.UserInfoReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.UserInfoReply_User'
        api.user.v1.UserInfoReply_User:
            type: object
            properties:
                mobile:
                    type: string
                nikeName:
                    type: string
                birthday:
                    type: string
                gender:
                    type: string
tags:
    - name: Goods
    - name: User
