syntax = "proto3";

package api.goods.v1;

//import "google.protobuf.c";

import "google/api/annotations.proto";

option go_package = "shop/api/goods/v1;v1";

service Goods {
  //获取商品列表
  rpc GetGoodsList(GetGoodsListRequest) returns (GetGoodsListReply) {
    option (google.api.http) = {
      post: "/v1/goods/get/list"
      body: "*"
    };
  }

  //获取商品
  rpc GetGoods(GoodsRequest) returns (GoodsReply) {
    option (google.api.http) = {
      get: "/v1/goods/get/{Id}"
    };
  }

  //创建商品
  rpc CreateGoods(CreateGoodsRequest) returns (CreateGoodsReply) {
    option (google.api.http) = {
      post: "/v1/goods/add"
      body: "*"
    };
  }

  //更新商品
  rpc UpdateGoods(UpdateGoodsRequest) returns (UpdateGoodsReply) {
    option (google.api.http) = {
      post: "/v1/goods/update"
      body: "*"
    };
  }

  //删除商品
  rpc DeleteGoods(DeleteGoodsRequest) returns (DeleteGoodsReply) {
    option (google.api.http) = {
      post: "/v1/goods/delete"
      body: "*"
    };
  }

  //获取商品分类列表
  rpc GetCategoryList(GetCategoryListRequest) returns(GetCategoryListReply) {
    option (google.api.http) = {
      post: "/v1/goods/category/get/list"
      body: "*"
    };
  }

  //获取商品分类
  rpc GetCategory(GetCategoryRequest) returns (GetCategoryReply) {
    option (google.api.http) = {
      get: "/v1/goods/category/get/{Id}"
    };
  }

  //创建商品种类
  rpc CreateCategory(CreateCategoryRequest) returns (CreateCategoryReply) {
    option (google.api.http) = {
      post: "/v1/goods/category/add"
      body: "*"
    };
  }

  //删除商品种类
  rpc DeleteCategory(DeleteCategoryRequest) returns (DeleteCategoryReply) {
    option (google.api.http) = {
      post: "/v1/goods/category/delete"
      body: "*"
    };
  }

  //更新商品分类类
  rpc UpdateCategory(UpdateCategoryRequest) returns (UpdateCategoryReply) {
    option (google.api.http) = {
      post: "/v1/goods/category/update"
      body: "*"
    };
  }
  //获取品牌列表
  rpc GetBrandList(GetBrandListRequest) returns (GetBrandListReply) {
    option (google.api.http) = {
      post: "/v1/goods/brand/get/list"
      body: "*"
    };
  }

  //获取品牌
  rpc GetBrand(GetBrandRequest) returns (GetBrandReply) {
    option (google.api.http) = {
      get: "/v1/goods/brand/get/{Id}"
    };
  }

  //创建品牌
  rpc CreateBrand(CreateBrandRequest) returns (CreateBrandReply) {
    option (google.api.http) = {
      post: "/v1/goods/brand/add"
      body: "*"
    };
  }

  //更新品牌
  rpc UpdateBrand(UpdateBrandRequest) returns (UpdateBrandReply) {
    option (google.api.http) = {
      post: "/v1/goods/brand/update"
      body: "*"
    };
  }

  //删除品牌
  rpc DeleteBrand(DeleteBrandRequest) returns (DeleteBrandReply) {
    option (google.api.http) = {
      post: "/v1/goods/brand/delete"
      body: "*"
    };
  }
}

message GoodsValue {
  bool OnSale = 1;
  bool ShipFree = 2;
  bool IsNew = 3;
  bool IsHot = 4;
  string Name = 5;
  string GoodsSn = 6;
  int64 ChickNum = 7;
  int64 SoldNum = 8;
  int64 FavNum = 9;
  float MarketPrice = 10;
  float ShopPrice = 11;
  string GoodsBrief = 12;
  string Images = 13;
  string GoodsDetail = 14;
  string GoodsFrontImage = 15;
  int64 CategoryID = 16;
  Category Category = 17;
  int64 BrandsID = 18;
  Brands Brands = 19;
  int64 Id = 20;
}

message Category {
  string Name = 1;
  int64 ParentCategoryID = 2;
  Category ParentCategory = 3;
  int64 Level = 4;
  bool IsTab = 5;
  int64 Id = 6;
}

message Brands {
  string Name = 1;
  string Loge = 2;
}

message GetGoodsListRequest {
  repeated int64 Id = 1;
}

message GetGoodsListReply {
  int64 Code = 1;
  string Message = 2;
  repeated GoodsValue Goods = 3;
}

message GoodsRequest {
  int64 Id = 1;
}

message GoodsReply {
  int64 Code = 1;
  string Message = 2;
  GoodsValue Goods = 3;
}

message CreateGoodsRequest {
  GoodsValue Goods = 1;
}

message CreateGoodsReply {
  int64 Code = 1;
  string Message = 2;
}

message UpdateGoodsRequest {
  GoodsValue Goods = 1;
}

message UpdateGoodsReply {
  int64 Code = 1;
  string Message = 2;
}

message DeleteGoodsRequest {
  int64 Id = 1;
}

message DeleteGoodsReply {
  int64 Code = 1;
  string Message = 2;
}

message GetGoodsDetailRequest {
  int64 id = 1;
}

message GetCategoryListRequest {

}

message GetCategoryListReply{

}

message GetCategoryRequest {
  int64 Id = 1;
}

message GetCategoryReply {
  int64 Code = 1;
  string Message = 2;
  Category Category = 3;
}

message CreateCategoryRequest {
  Category Category = 1;
}

message CreateCategoryReply {
  int64 Code = 1;
  string Message = 2;
}

message UpdateCategoryRequest {
  Category Category = 1;
}

message UpdateCategoryReply {
  int64 Code = 1;
  string Message = 2;
}

message DeleteCategoryRequest {
  int64 Id = 1;
}

message DeleteCategoryReply {
  int64 Code = 1;
  string Message = 2;
}

message GetBrandListRequest {

}

message GetBrandListReply {

}

message GetBrandRequest {
  int64 Id = 1;
}

message GetBrandReply {
  int64 Code = 1;
  string Message = 2;
  Brands Brands = 3;
}

message CreateBrandRequest {
  Brands Brands = 1;
}

message CreateBrandReply {
  int64 Code = 1;
  string Message = 2;
}

message UpdateBrandRequest {
  Brands Brands = 1;
}

message UpdateBrandReply {
  int64 Code = 1;
  string Message = 2;
}

message DeleteBrandRequest {
  int64 Id = 1;
}

message DeleteBrandReply {
  int64 Code = 1;
  string Message = 2;
}

